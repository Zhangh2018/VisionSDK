/*****************************************************************************
*
* Freescale Confidential Proprietary
* 
* Copyright (c) 2014 Freescale Semiconductor;
* All Rights Reserved
*
*****************************************************************************
*
* THIS SOFTWARE IS PROVIDED BY FREESCALE "AS IS" AND ANY EXPRESSED OR
* IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
* IN NO EVENT SHALL FREESCALE OR ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
* INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
* (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
* SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
* HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
* STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
* IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF
* THE POSSIBILITY OF SUCH DAMAGE.
*
****************************************************************************/
#ifndef APU_apexcv_PROCESS_H
#define APU_apexcv_PROCESS_H

#include "base_process_init.h"
#include "apu_apexcv_graph.h"



#ifdef APEX2_EMULATE
#include "apu_apexcv_apu_process_desc.hpp"
REGISTER_PROCESS_TYPE(apexcv_PI, apu_apexcv_apu_process_desc)
#else
#include str_header(apexcv_PI,hpp)
#endif


class CTemplate_Demo_Proc : public CBase_ProcInit<apexcv_PI> {
private:
public:	
	// Input data created eventually by other processes or read in
	DataDescriptor *lInputA;
	DataDescriptor *lInputB;

	// Outputs generated by this process
	DataDescriptor lOutput;
public:
	CTemplate_Demo_Proc(int32_t apex_id = APEX_APEX0)
	: CBase_ProcInit<apexcv_PI>(apex_id)
	{}

	virtual ~CTemplate_Demo_Proc();
	int InitData(DataDescriptor *inputA, DataDescriptor *inputB);

	int32_t Connect();

};

#endif