// ISP Graph "sony_rgb"
Import "../../../inc/ipus_mem_map.h";
Import "../../../inc/ipuv_mem_map.h";
Import "../../../inc/mipi_mem_map.h";
GraphLimits.NumLines = 729;
		
Node Debayer_RGB {
	SCALAR,
	6,
	//720
720
};
Param Debayer_RGB {
    { D_IPUS_SYN_HOST_INACFG_OFF, 0x00000300 },
    { D_IPUS_SYN_HOST_XCFG_OFF, (1280 << 16) | 0x1 },
    { D_IPUS_SYN_HOST_OUTCFG_OFF, 0x00000100 },
    { D_IPUS_SYN_S_CH0_CFG_INA_OFF, 0x00058000 },
    { D_IPUS_SYN_S_CH1_CFG_INA_OFF, 0x00058000 },
    { D_IPUS_SYN_S_CH0_CFG_OUT_OFF, 0x10000000 },
};


	Load Debayer_RGB {
	debayer_rgb_simple_interleaved
	};



Node MIPI {
	MIPICSI0,
	0
};


Node ChGain_Exposure {
	SCALAR,
	1,
	//726
726
};
Param ChGain_Exposure {
    { D_IPUS_SYN_HOST_INACFG_OFF, 0x00000300 },
    { D_IPUS_SYN_HOST_XCFG_OFF, (1280 << 16) | 0x1 },
    { D_IPUS_SYN_HOST_OUTCFG_OFF, 0x00000100 },
    { D_IPUS_SYN_S_CH0_CFG_INA_OFF, 0x00058000 },
    { D_IPUS_SYN_S_CH1_CFG_INA_OFF, 0x00058000 },
    { D_IPUS_SYN_S_CH0_CFG_OUT_OFF, 0x00000000 },
};


	Load ChGain_Exposure {
	exposure
	};


		Node FastDMA {
			FDMA,
			0
		};

		
		
		Buffer Debayer_RGB_Buffer_0 {
			Debayer_RGB.out[0],
	GENERIC_8,
	//3840
3840,
	//16
16,
	//3840
3840,
	1
		};
		
		Debayer_RGB_Buffer_0.readPixels = //3840
3840;
		
		
			Input RGB_to_DDR = FastDMA.A[0];
			  RGB_to_DDR.firstLine = //0
0;
			  RGB_to_DDR.increment = 1;
			
			Connect {
				Debayer_RGB_Buffer_0,
				RGB_to_DDR,
				//1
1};

	DDRBuffer FastDMA_Buffer_0 {
		FastDMA.out[0],
	GENERIC_8,
	//3840
3840,
	//720
720,
	//5760
5760,
	1
	};
	
		FastDMA_Buffer_0.readPixels = //3840
3840;
	
		
	Connect { FastDMA_Buffer_0, DDR, 0 };
	
		
		

		
		

		
		
	

		
		
		Buffer ChGain_Exposure_Buffer_0 {
			ChGain_Exposure.out[0],
	GENERIC_16,
	//1288
1288,
	//16
16,
	//2576
2576,
	1
		};
		
		ChGain_Exposure_Buffer_0.readPixels = //1288
1288;
		
	Input Debayer_RGB_A_0 = Debayer_RGB.A[0];
	  Debayer_RGB_A_0.firstLine = //0
0;
	  Debayer_RGB_A_0.pixels = //1288
1288;
	  Debayer_RGB_A_0.lineSkip = //0
0;
	  Debayer_RGB_A_0.increment = 1;
	  Debayer_RGB_A_0.pixelSkip = //0
0;
	  Debayer_RGB_A_0.type = GENERIC_16;
		
		
Connect {
  ChGain_Exposure_Buffer_0, 
  Debayer_RGB_A_0,
  //2
2};
	Input Debayer_RGB_A_1 = Debayer_RGB.A[1];
	  Debayer_RGB_A_1.firstLine = //1
1;
	  Debayer_RGB_A_1.pixels = //1288
1288;
	  Debayer_RGB_A_1.lineSkip = //0
0;
	  Debayer_RGB_A_1.increment = 1;
	  Debayer_RGB_A_1.pixelSkip = //0
0;
	  Debayer_RGB_A_1.type = GENERIC_16;
		
		
Connect {
  ChGain_Exposure_Buffer_0, 
  Debayer_RGB_A_1,
  //2
2};
		

		
		

		
		
		Buffer MIPI_Buffer_0 {
			MIPI.out[0],
	GENERIC_16,
	//1288
1288,
	//16
16,
	//2576
2576,
	1
		};
		
		MIPI_Buffer_0.readPixels = //1288
1288;
		
	Input ChGain_Exposure_A_0 = ChGain_Exposure.A[0];
	  ChGain_Exposure_A_0.firstLine = //0
0;
	  ChGain_Exposure_A_0.pixels = //1288
1288;
	  ChGain_Exposure_A_0.lineSkip = //0
0;
	  ChGain_Exposure_A_0.increment = 1;
	  ChGain_Exposure_A_0.pixelSkip = //0
0;
	  ChGain_Exposure_A_0.type = GENERIC_16;
		
		
Connect {
  MIPI_Buffer_0, 
  ChGain_Exposure_A_0,
  //1
1};
	Input ChGain_Exposure_A_1 = ChGain_Exposure.A[1];
	  ChGain_Exposure_A_1.firstLine = //1
1;
	  ChGain_Exposure_A_1.pixels = //1288
1288;
	  ChGain_Exposure_A_1.lineSkip = //0
0;
	  ChGain_Exposure_A_1.increment = 1;
	  ChGain_Exposure_A_1.pixelSkip = //0
0;
	  ChGain_Exposure_A_1.type = GENERIC_16;
		
		
Connect {
  MIPI_Buffer_0, 
  ChGain_Exposure_A_1,
  //2
2};
		

		
		
	