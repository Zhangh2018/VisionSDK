// ISP Graph "static_ddr2"
Import "../../../inc/ipus_mem_map.h";
Import "../inc/iofiles.h";
GraphLimits.NumLines = NUM_LINES;
		
Node MIPI_DDR_COPY0 {
	SCALAR,
	0,
	NUM_LINES
};
Param MIPI_DDR_COPY0 {
    { D_IPUS_SYN_HOST_INACFG_OFF, 0x00000100 },
    { D_IPUS_SYN_HOST_XCFG_OFF, (1280 << 16) | 0x1 },
    { D_IPUS_SYN_HOST_OUTCFG_OFF, 0x00000100 },
    { D_IPUS_SYN_S_CH0_CFG_INA_OFF, 0x00150000 },
    { D_IPUS_SYN_S_CH0_CFG_OUT_OFF, 0x10000000 },
};


	Load MIPI_DDR_COPY0 {
	copy_1to3_ipus
	};



Node MIPI_DDR_COPY1 {
	SCALAR,
	1,
	NUM_LINES
};
Param MIPI_DDR_COPY1 {
    { D_IPUS_SYN_HOST_INACFG_OFF, 0x00000100 },
    { D_IPUS_SYN_HOST_XCFG_OFF, (1280 << 16) | 0x1 },
    { D_IPUS_SYN_HOST_OUTCFG_OFF, 0x00000100 },
    { D_IPUS_SYN_S_CH0_CFG_INA_OFF, 0x00150000 },
    { D_IPUS_SYN_S_CH0_CFG_OUT_OFF, 0x10000000 },
};


	Load MIPI_DDR_COPY1 {
	copy_1to3_ipus
	};


		Node FastDMA {
			FDMA,
			0
		};
	
	

		
		
		Buffer MIPI_DDR_COPY0_Buffer_0 {
			MIPI_DDR_COPY0.out[0],
	GENERIC_8,
	3840,
	8,
	3840,
	1
		};
		
		MIPI_DDR_COPY0_Buffer_0.readPixels = 3840;
		
		
			Input FDMA_TO_DDR_0 = FastDMA.A[0];
			  FDMA_TO_DDR_0.firstLine = 0;
			  FDMA_TO_DDR_0.increment = 1;
			
			Connect {
				MIPI_DDR_COPY0_Buffer_0,
				FDMA_TO_DDR_0,
				1};

	DDRBuffer FastDMA_Buffer_0 {
		FastDMA.out[0],
	GENERIC_8,
	3840,
	NUM_LINES,
	5760,
	1
	};
	
		FastDMA_Buffer_0.readPixels = 3840;
	
		
	Connect { FastDMA_Buffer_0, DDR, 0 };
	

		
		
		

		
		
		DDRBuffer producerless_buffer_1 {
			null,
	GENERIC_16,
	1296,
	NUM_LINES,
	2592,
	1
		};
		
		
			Input FDMA_FR_DDR_0 = FastDMA.A[1];
			  FDMA_FR_DDR_0.firstLine = 0;
			  FDMA_FR_DDR_0.increment = 1;
			
			Connect {
				producerless_buffer_1,
				FDMA_FR_DDR_0,
				1};

	Buffer FastDMA_Buffer_1 {
		FastDMA.out[1],
	GENERIC_16,
	1296,
	8,
	2592,
	1
	};
	
		FastDMA_Buffer_1.readPixels = 2592;
	
	Input MIPI_DDR_COPY0_A_0 = MIPI_DDR_COPY0.A[0];
	  MIPI_DDR_COPY0_A_0.firstLine = 0;
	  MIPI_DDR_COPY0_A_0.pixels = 1280;
	  MIPI_DDR_COPY0_A_0.lineSkip = 0;
	  MIPI_DDR_COPY0_A_0.increment = 1;
	  MIPI_DDR_COPY0_A_0.pixelSkip = 0;
	  MIPI_DDR_COPY0_A_0.type = GENERIC_16;
		
		
Connect {
  FastDMA_Buffer_1, 
  MIPI_DDR_COPY0_A_0,
  1};
	

		
		
		DDRBuffer producerless_buffer_2 {
			null,
	GENERIC_16,
	1296,
	NUM_LINES,
	2592,
	1
		};
		
		
			Input FDMA_FR_DDR_1 = FastDMA.A[2];
			  FDMA_FR_DDR_1.firstLine = 0;
			  FDMA_FR_DDR_1.increment = 1;
			
			Connect {
				producerless_buffer_2,
				FDMA_FR_DDR_1,
				1};

	Buffer FastDMA_Buffer_2 {
		FastDMA.out[2],
	GENERIC_16,
	1296,
	8,
	2592,
	1
	};
	
		FastDMA_Buffer_2.readPixels = 2592;
	
	Input MIPI_DDR_COPY1_A_0 = MIPI_DDR_COPY1.A[0];
	  MIPI_DDR_COPY1_A_0.firstLine = 0;
	  MIPI_DDR_COPY1_A_0.pixels = 1280;
	  MIPI_DDR_COPY1_A_0.lineSkip = 0;
	  MIPI_DDR_COPY1_A_0.increment = 1;
	  MIPI_DDR_COPY1_A_0.pixelSkip = 0;
	  MIPI_DDR_COPY1_A_0.type = GENERIC_16;
		
		
Connect {
  FastDMA_Buffer_2, 
  MIPI_DDR_COPY1_A_0,
  1};
	

		
		
	

		
		
		Buffer MIPI_DDR_COPY1_Buffer_0 {
			MIPI_DDR_COPY1.out[0],
	GENERIC_8,
	3840,
	8,
	3840,
	1
		};
		
		MIPI_DDR_COPY1_Buffer_0.readPixels = 3840;
		
		
			Input FDMA_TO_DDR_1 = FastDMA.A[3];
			  FDMA_TO_DDR_1.firstLine = 0;
			  FDMA_TO_DDR_1.increment = 1;
			
			Connect {
				MIPI_DDR_COPY1_Buffer_0,
				FDMA_TO_DDR_1,
				1};

	DDRBuffer FastDMA_Buffer_3 {
		FastDMA.out[3],
	GENERIC_8,
	3840,
	NUM_LINES,
	5760,
	1
	};
	
		FastDMA_Buffer_3.readPixels = 3840;
	
		
	Connect { FastDMA_Buffer_3, DDR, 0 };
	

		
		
		

		
		
	
	