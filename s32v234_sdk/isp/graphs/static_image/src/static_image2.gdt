// ISP Graph "static_image2"
Import "../../../inc/ipus_mem_map.h";
Import "../../../inc/ipuv_mem_map.h";
Import "../../../inc/mipi_mem_map.h";
GraphLimits.NumLines = 0;
		
Node Debayer {
	SCALAR,
	1,
	700
};
Param Debayer {
    { D_IPUS_SYN_HOST_INACFG_OFF, 0x00000300 },
    { D_IPUS_SYN_HOST_XCFG_OFF, (1280 << 16) | 0x1 },
    { D_IPUS_SYN_HOST_OUTCFG_OFF, 0x00000700 },
    { D_IPUS_SYN_S_CH0_CFG_INA_OFF, 0x00058000 },
    { D_IPUS_SYN_S_CH1_CFG_INA_OFF, 0x00058000 },
    { D_IPUS_SYN_S_CH0_CFG_OUT_OFF, 0x10000000 },
    { D_IPUS_SYN_S_CH1_CFG_OUT_OFF, 0x10000000 },
    { D_IPUS_SYN_S_CH2_CFG_OUT_OFF, 0x10000000 },
};


	Load Debayer {
	debayer_rgb_simple_planar
	};



Node YUV2RGB {
	SCALAR,
	0,
	700
};
Param YUV2RGB {
    { D_IPUS_SYN_HOST_INACFG_OFF, 0x00000701 },
    { D_IPUS_SYN_HOST_XCFG_OFF, (1280 << 16) | 0x1 },
    { D_IPUS_SYN_HOST_OUTCFG_OFF, 0x00000101 },
    { D_IPUS_SYN_S_CH0_CFG_INA_OFF, 0x10050080 },
    { D_IPUS_SYN_S_CH1_CFG_INA_OFF, 0x10050080 },
    { D_IPUS_SYN_S_CH2_CFG_INA_OFF, 0x10050080 },
    { D_IPUS_SYN_S_CH0_CFG_OUT_OFF, 0x10000000 },
};


	Load YUV2RGB {
	copy_replcate3x
	};


		Node FastDMA {
			FDMA,
			0
		};

		
		
		Buffer YUV2RGB_Buffer_0 {
			YUV2RGB.out[0],
	GENERIC_8,
	3840,
	16,
	3840,
	1
		};
		
		YUV2RGB_Buffer_0.readPixels = 3840;
		
		
			Input FDMA_TO_DDR = FastDMA.A[0];
			  FDMA_TO_DDR.firstLine = 0;
			  FDMA_TO_DDR.increment = 1;
			
			Connect {
				YUV2RGB_Buffer_0,
				FDMA_TO_DDR,
				1};

	DDRBuffer FastDMA_Buffer_0 {
		FastDMA.out[0],
	GENERIC_8,
	3840,
	700,
	5760,
	1
	};
	
		FastDMA_Buffer_0.readPixels = 3840;
	
		
	Connect { FastDMA_Buffer_0, DDR, 0 };
	
		
		

		
		

		
		
	
		Buffer producerless_buffer_1 {
			null,
	GENERIC_16,
	1296,
	991,
	2592,
	1
		};
		
	Input Debayer_A_0 = Debayer.A[0];
	  Debayer_A_0.firstLine = 0;
	  Debayer_A_0.pixels = 1288;
	  Debayer_A_0.lineSkip = 0;
	  Debayer_A_0.increment = 1;
	  Debayer_A_0.pixelSkip = 0;
	  Debayer_A_0.type = GENERIC_16;
		
		
Connect {
  producerless_buffer_1, 
  Debayer_A_0,
  2};
	Input Debayer_A_1 = Debayer.A[1];
	  Debayer_A_1.firstLine = 1;
	  Debayer_A_1.pixels = 1288;
	  Debayer_A_1.lineSkip = 0;
	  Debayer_A_1.increment = 1;
	  Debayer_A_1.pixelSkip = 0;
	  Debayer_A_1.type = GENERIC_16;
		
		
Connect {
  producerless_buffer_1, 
  Debayer_A_1,
  2};

		
		
		Buffer Debayer_Buffer_0 {
			Debayer.out[0],
	GENERIC_8,
	1280,
	16,
	1280,
	1
		};
		
		Debayer_Buffer_0.readPixels = 1280;
		
	Input YUV2RGB_A_1 = YUV2RGB.A[1];
	  YUV2RGB_A_1.firstLine = 0;
	  YUV2RGB_A_1.pixels = 1280;
	  YUV2RGB_A_1.lineSkip = 0;
	  YUV2RGB_A_1.increment = 1;
	  YUV2RGB_A_1.pixelSkip = 0;
	  YUV2RGB_A_1.type = GENERIC_8;
		
		
Connect {
  Debayer_Buffer_0, 
  YUV2RGB_A_1,
  1};
		

		
		

		
		
		Buffer Debayer_Buffer_1 {
			Debayer.out[1],
	GENERIC_8,
	1280,
	16,
	1280,
	1
		};
		
		Debayer_Buffer_1.readPixels = 1280;
		
	Input YUV2RGB_A_0 = YUV2RGB.A[0];
	  YUV2RGB_A_0.firstLine = 0;
	  YUV2RGB_A_0.pixels = 1280;
	  YUV2RGB_A_0.lineSkip = 0;
	  YUV2RGB_A_0.increment = 1;
	  YUV2RGB_A_0.pixelSkip = 0;
	  YUV2RGB_A_0.type = GENERIC_8;
		
		
Connect {
  Debayer_Buffer_1, 
  YUV2RGB_A_0,
  1};
		

		
		

		
		
		Buffer Debayer_Buffer_2 {
			Debayer.out[2],
	GENERIC_8,
	1280,
	16,
	1280,
	1
		};
		
		Debayer_Buffer_2.readPixels = 1280;
		
	Input YUV2RGB_A_2 = YUV2RGB.A[2];
	  YUV2RGB_A_2.firstLine = 0;
	  YUV2RGB_A_2.pixels = 1280;
	  YUV2RGB_A_2.lineSkip = 0;
	  YUV2RGB_A_2.increment = 1;
	  YUV2RGB_A_2.pixelSkip = 0;
	  YUV2RGB_A_2.type = GENERIC_8;
		
		
Connect {
  Debayer_Buffer_2, 
  YUV2RGB_A_2,
  1};
		

		
		
	